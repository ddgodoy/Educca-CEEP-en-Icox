<public:component lightweight="true">
<!--
LEGAL NOTICE:

This component is protected by copyright law and international treaties. Unauthorized reproduction or distribution
of this component, or any portion of it is strictly forbidden, and may result in severe civil and criminal penalties, 
and will be prosecuted to the maximum extent possible under law.

Composica Ltd. (c) 2002-2009.
-->
 <public:method name="play" /> <public:method name="stop" /> <public:method name="reset" /> <public:method name="getProvider" /> <public:method name="setVolume" /> <public:event name="onload" id="eLoad" /> <public:event name="onstop" id="eStop" /> <public:event name="oncomplete" id="eComplete" /> <public:event name="onplaying" id="ePlaying" /> <public:attach event="ondocumentready" for="element" onevent="preInitPlayer()" /> <script language="jscript" src="Runtime/mprovide.js"></script> <script language="jscript">
var oDoc=element.document
oDoc.body.attachEvent("onfinishpage",function(){reset(false);})
function preInitPlayer(){;/*@if(!@_jscript)*/
if(Providers.detect(element.source)=="WMP")return setTimeout(initPlayer,300)
;/*@end @*/
initPlayer()}
function initPlayer(){try{if(!element.source&&!element.provider)return}catch(e){return;}
var oStage=element.getElementsByTagName("mpstage")[0]
if(!oStage)return
if(element.style.visibility=="hidden"&&element.transactive!="true"&&!element.forceStart){element.style.visibility="visible"
element.style.marginTop="-2000em"}
if(oStage.clientWidth==0&&element.autoStart!="true"&&!element.forceStart)return setTimeout(initPlayer,100)
if(!element.forceStart){var el=element,ignoreVis=false
while(el&&el.nodeType==1){if(el.activetrans||(!ignoreVis&&el.currentStyle.visibility=="hidden"))return setTimeout(initPlayer,100)
if(el.currentStyle.visibility=="visible")ignoreVis=true
el=el.parentNode}}
var oProvider=Providers.current
if(!oProvider){oProvider=element.provider?Providers.set(element.provider,oStage):Providers.detect(element.source,oStage)
if(oProvider.needsVideoDelay&&oProvider.needsVideoDelay()&&!/\baudio\b/.test(element.className)){oStage.appendChild(oProvider.engine)
return setTimeout(initPlayer,1000)}}
if(!oProvider.isInteractive())return setTimeout(initPlayer,100);
if(oProvider.init&&!oProvider.inited)oProvider.init()
oProvider.setContextMenu(element.contextMenu=="true")
var oPlay=element.getElementsByTagName("mpplay")[0],oMute=element.getElementsByTagName("mpmute")[0],oVolumeBar=element.getElementsByTagName("mpvolume")[0],oVolume=element.getElementsByTagName("mpvthumb")[0]
if(oPlay){if(!("origClass"in oPlay))oPlay.origClass=oPlay.className||""
oPlay.onclick=function(){oProvider[oProvider.getState()=="play"?"pause":"play"]()
oPlay.onmouseover()}
oPlay.onmouseover=function(){if(oPlay.isBuffering)return false
oPlay.className=oProvider.getState()=="play"?this.pauseoverrule||"pauseover":this.overrule||"over"
return!(event.cancelBubble=true)}
oPlay.onmouseout=function(){if(oPlay.isBuffering)return false
oPlay.className=oProvider.getState()=="play"?this.pauserule||"pause":this.origClass
return!(event.cancelBubble=true)}}
if(element.volume)oProvider.setVolume(+element.volume)
if(oMute){oMute.onclick=function(){if(this.isMuted){this.className=""
oProvider.setVolume(this.lastVolume)
if(oVolume)oVolume.style.left=this.lastVolume+"%"
this.isMuted=false
element.mute="false"}else{this.className="on"
this.lastVolume=oProvider.getVolume()
oProvider.setVolume(0)
if(oVolume)oVolume.style.left=0
this.isMuted=true
element.mute="true"}}
if(element.mute=="true")oMute.onclick()}
if(oVolume){oVolume.style.left=oProvider.getVolume()+"%"
oVolume.style.marginLeft=-Math.floor(oVolume.offsetWidth/2)
oVolume.dragHandler=function(pct){setVolume(pct);}}
if(oVolumeBar)oVolumeBar.onclick=function(){if(event.srcElement!=oVolume)setVolume((event.offsetX/this.offsetWidth)*100);}
function setVolume(pct){if(oMute&&oMute.isMuted)oMute.onclick()
if(oVolume)oVolume.style.left=pct+"%"
oProvider.setVolume(pct)
element.volume=pct}
var oBuffered=element.getElementsByTagName("mpbuffered")[0],oPlayed=element.getElementsByTagName("mpplayed")[0],oTrackBar=element.getElementsByTagName("mpslider")[0],oPosition=element.getElementsByTagName("mpsthumb")[0],oTimeStat=element.getElementsByTagName("mpstatus")[0]
if(oBuffered)oBuffered.style.width=0
if(oPlayed)oPlayed.style.width=0
if(oPosition){oPosition.style.left=0
oPosition.style.marginLeft=-Math.floor(oPosition.offsetWidth/2)}
if(oPosition){oPosition.preventDrag=function(){return!oProvider.isSeekable()}
oPosition.getMaxWidth=function(){var buffered=oProvider.getBufferedTime&&oProvider.getBufferedTime()
if(!buffered||buffered==-1)return this.parentNode.offsetWidth
return oBuffered.offsetWidth}
oPosition.dragHandler=function(pct){if(oPlayed)oPlayed.style.width=0
updateTimeDisp(duration*(pct/100))}
oPosition.dropHandler=function(pct){oProvider.setTime(duration*(pct/100))
postSeek()}}
if(oTrackBar&&element.allowSeek!="false"){oTrackBar.onclick=function(){if(event.srcElement!=oPosition&&oProvider.isSeekable()){var pct=(event.offsetX/this.offsetWidth)*100
oProvider.setTime(duration*(pct/100))
postSeek()}}}
function postSeek(){if(!oProvider.isSeeking){if(oProvider.getState()!="play")oProvider.play()
updateState()}}
var duration=-1,loaded=false
clearInterval(initPlayer.stateChecker)
initPlayer.stateChecker=setInterval(updateState,250)
oProvider.listenPlayState(function(oldState,newState){if(newState!="stop"&&(newState=="unknown"||(oPlay&&oPlay.isBuffering)))return
if(oPlay)oPlay.className=newState=="play"?"pause":oPlay.origClass
if(newState=="stop"&&arguments.callee.lastState!="stop"){eStop.fire()
if(!element.complete){var oEvent=createEventObject()
oEvent.targetElement=element
eComplete.fire(oEvent)
element.complete=true}}
arguments.callee.lastState=newState})
function updateState(){try{if(Providers.current&&!oProvider.isSeeking){if(duration==-1)duration=oProvider.getDuration()
if(!oPosition||!oPosition.isDragged){if(duration>-1){var pctPlayed=Math.min(100,(oProvider.getTime()/duration)*100)+"%"
if(oPosition)oPosition.style.left=pctPlayed
if(oPlayed)oPlayed.style.width=pctPlayed}
var oEvent=oDoc.createEventObject()
oEvent.time=oProvider.getTime()
ePlaying.fire(oEvent)
updateTimeDisp()}
if(oBuffered&&oProvider.getBufferedTime&&duration>-1){var buffered=oProvider.getBufferedTime()
if(buffered>-1){buffered=(buffered/duration)*100
oBuffered.style.width=buffered+"%"}}
if(!loaded&&oProvider.isLoaded()){loaded=true
if(oPlay)oPlay.isBuffering=false
eLoad.fire()
if(oPlay)oPlay.onmouseout()}}}catch(e){}}
function updateTimeDisp(customTime){try{if(Providers.current&&oTimeStat){var timeDisp=timeFormat(customTime!=undefined?customTime:oProvider.getTime())
if(duration>-1)timeDisp+=" / "+timeFormat(duration)
oTimeStat.innerText=timeDisp}}catch(e){}}
oProvider.setAutoStart(element.autoStart=="true")
oProvider.setFile(element.source)
element.complete=false
if(oPlay){oPlay.isBuffering=true
oPlay.className=oPlay.bufferrule||"buffering"}
if(oVolume)oVolume.onmousedown=dragThumb
if(oPosition&&element.allowSeek!="false")oPosition.onmousedown=dragThumb}
function dragThumb(){if(this.preventDrag&&this.preventDrag())return
this.setCapture()
this.isDragged=true
var posX=event.clientX,posL=this.offsetLeft+(this.offsetWidth/2),minL=0,maxL=this.parentNode.offsetWidth
this.onmousemove=function(){maxL=(this.getMaxWidth&&this.getMaxWidth())||maxL
posL-=posX-event.clientX
if(posL<minL)posL=minL
if(posL>maxL)posL=maxL
this.style.left=posL
if(posL!=minL&&posL!=maxL)posX=event.clientX
if(this.dragHandler)this.dragHandler(Math.round((posL/this.parentNode.offsetWidth)*100))}
this.onmouseup=function(){this.releaseCapture()
this.isDragged=false
this.onmousemove=null
this.onmouseup=null
if(this.dropHandler)this.dropHandler(Math.round((posL/this.parentNode.offsetWidth)*100))}}
function timeFormat(seconds){if(!seconds||typeof(seconds)!="number")return"00:00"
seconds=Math.floor(seconds)
var minutes=Math.floor(seconds/60)
seconds=seconds%60
return(minutes>9?minutes:"0"+minutes)+":"+(seconds>9?seconds:"0"+seconds)}
var lastCommand="none"
function play(){lastCommand="play"
playMedia()}
function stop(){lastCommand="stop"
stopMedia()}
function playMedia(){if(playMedia.reset){playMedia.reset=false
reset()
lastCommand="play"}
var oProvider=Providers.current
if(oProvider&&oProvider.isInteractive()&&oProvider.isLoaded()){if(stopMedia.called&&oProvider.name=="SWF"){stopMedia.called=false
oProvider._cmd("seek","time","0")}
if(oProvider.getState()!="play")oProvider.play()
return}
if(lastCommand=="play")setTimeout(playMedia,100)}
function stopMedia(){stopMedia.called=true
;/*@if(!@_jscript)*/ playMedia.reset=true; /*@end @*/
var oProvider=Providers.current
if(oProvider&&oProvider.isInteractive()&&oProvider.isLoaded()){return oProvider.stop()}
if(lastCommand=="stop")setTimeout(stopMedia,100)}
function reset(reInit){var oProvider=Providers.current
if(oProvider){try{oProvider.close()}catch(e){}
oProvider.engine.style.visibility="hidden"
try{oProvider.engine.parentNode.removeChild(oProvider.engine);}
catch(e){try{oProvider.engine.outerHTML="";}catch(e){}}
Providers.current=null}
lastCommand="none"
clearInterval(initPlayer.stateChecker)
if(reInit!==false)initPlayer()}
function getProvider(){return Providers.current}
function setVolume(value){var oProvider=Providers.current
element.volume=value
if(oProvider&&oProvider.isInteractive())oProvider.setVolume(value)}
</script> </public:component>