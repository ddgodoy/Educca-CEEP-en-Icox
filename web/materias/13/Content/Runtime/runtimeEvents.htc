<public:component lightweight="true">
<!--
LEGAL NOTICE:

This component is protected by copyright law and international treaties. Unauthorized reproduction or distribution
of this component, or any portion of it is strictly forbidden, and may result in severe civil and criminal penalties, 
and will be prosecuted to the maximum extent possible under law.

Composica Ltd. (c) 2002-2009.
-->
 <public:method name="raiseStatusEvent" /> <public:method name="raiseInitPage" /> <public:method name="raiseFinishPage" /> <public:method name="raiseRehash" /> <public:method name="raiseNavigate" /> <public:method name="attachEvent" /> <public:method name="attachRehash" /> <public:method name="clearRehash" /> <public:method name="detachEvent" /> <public:method name="clearListeners" /> <public:property name="isReady" get="isReady" /> <public:event name="onstatuschange" id="eStatChg" /> <public:event name="onvarchange" id="eVarChg" /> <public:event name="oninitpage" id="eInitPage" /> <public:event name="onfinishpage" id="eFinishPage" /> <public:event name="onrehash" id="eRehash" /> <public:event name="onnavigate" id="eNav" /> <public:attach event="ondocumentready" for="element" onevent="attachCustomHandlers()" /> <script language="jscript">
function attachCustomHandlers(){oContentArea.attachEvent("onclick",activateLinks)}
function activateLinks(){var oSrc=event.srcElement
if(oSrc){while(oSrc&&!oSrc.getAttribute("vhref")&&oSrc!=oContentArea){oSrc=oSrc.parentElement}
if(oSrc&&oSrc.getAttribute("vhref")){var sHref=oSrc.getAttribute("vhref"),sTarget=oSrc.getAttribute("vtarget")||"_blank"
open(sHref,sTarget)}}}
function raiseStatusEvent(oProps){var oEvent=createEventObject()
for(var sProp in oProps){oEvent[sProp]=oProps[sProp]}
eStatChg.fire(oEvent)
oEvent=createEventObject()
eVarChg.fire(oEvent)}
function raiseInitPage(){var oEvent=createEventObject()
eInitPage.fire(oEvent)
return oEvent.returnValue}
function raiseFinishPage(){var oEvent=createEventObject()
eFinishPage.fire(oEvent)
return oEvent.returnValue}
function raiseRehash(oLayer){var oEvent=createEventObject()
oEvent.srcLayer=oLayer
eRehash.fire(oEvent)
return oEvent.returnValue}
var aRehash=[]
function attachRehash(oEl,fListener){element.attachEvent("onrehash",fListener)
aRehash.push({el:oEl,f:fListener})}
function clearRehash(oLayer){for(var i=0;i<aRehash.length;i++){if(oLayer.contains(aRehash[i].el)){element.detachEvent("onrehash",aRehash[i].f)
aRehash.splice(i,1)
i--}}}
function raiseNavigate(){eNav.fire()}
function isReady(){return true;}
function attachEvent(sEvent,fListener){element[sEvent]=execEvent
queueEvent(sEvent,fListener)}
function detachEvent(sEvent,fListener){var aQueue=queueEvent[sEvent]
if(aQueue){for(var iEv=0;iEv<aQueue.length;iEv++){if(aQueue[iEv]==fListener){aQueue.splice(iEv,1)
break}}
if(aQueue.length==0)element[sEvent]=null}}
function clearListeners(sEvent){element[sEvent]=null
queueEvent(sEvent,null,false)}
function queueEvent(sType,fListener,bAdd){if(bAdd===false){queueEvent[sType]=[]}else{if(!queueEvent[sType])queueEvent[sType]=[]
queueEvent[sType].push(fListener)}}
function execEvent(){var sType="on"+event.type
if(queueEvent[sType]){for(var i=0;i<queueEvent[sType].length;i++)queueEvent[sType][i](event)}}
</script> </public:component>