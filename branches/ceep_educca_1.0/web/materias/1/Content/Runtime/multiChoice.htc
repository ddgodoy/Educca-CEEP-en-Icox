<public:component lightweight="true">
<!--
LEGAL NOTICE:

This component is protected by copyright law and international treaties. Unauthorized reproduction or distribution
of this component, or any portion of it is strictly forbidden, and may result in severe civil and criminal penalties, 
and will be prosecuted to the maximum extent possible under law.

Composica Ltd. (c) 2002-2009.
-->
 <public:attach event="ondocumentready" for="element" onevent="initMultiChoice()" /> <public:event name="oncheck" id="eCheck" />  <public:property name="isHost" get="getIsHost" /> <public:method name="getGlobalResult" /> <public:method name="getRangeResult" /> <public:method name="isCustomMatch" /> <public:method name="checkAnswer" /> <public:method name="showFix" /> <public:property name="correctPattern" get="getCorrectPattern" /> <public:property name="userPattern" get="getUserPattern" /> <public:property name="customDesc" get="getCustomDesc" />  <public:emuproperty name="alreadyDone" /> <public:emuproperty name="tries" /> <public:emuproperty name="bullet" /> <public:emuproperty name="pressedbullet" />  <public:attach event="ondocumentready" for="element" onevent="initVar()" /> <public:method name="isVarSupported" /> <public:method name="getVarValue" /> <public:event name="onvarchange" id="eVarChg" /> <script language="jscript">
var	oFeedBack,iTotalAttempts,iTotalCorrect=0,iTotalMarked=0,iComputedCorrect=0,iCorrect=0,iIncorrect=0,oLastMark,bImmediate,bRandomize,aAnswers,pCorrectPattern,pUserPattern,sStyleOver,aOrderAns=[],bLimitAns
if(element.getAttribute("overrule")!==null){Hover.clear(element)
element.setAttribute("answeroverrule",element.getAttribute("overrule"))
element.removeAttribute("overrule")}
function initMultiChoice(){aAnswers=element.getElementsByTagName("mcanswer")
bImmediate=element.getAttribute("immediate")=="true"
bRandomize=element.getAttribute("randomize")=="true"
bLimitAns=element.getAttribute("limitans")=="true"
oFeedBack=element.getElementsByTagName("feedback")[0]
if(oFeedBack){iTotalAttempts=oFeedBack.getAttribute("attempts")*1
oFeedBack.attachEvent("onactivitydone",handleDone)
if(bImmediate){var oValidate=element.getElementsByTagName("fbvalidate")[0]
if(oValidate)oValidate.style.visibility="hidden"}}
if(element.alreadyDone)return handleDone()
if(!element.tries)element.tries=0
pCorrectPattern=[]
for(var iAnswer=0;iAnswer<aAnswers.length;iAnswer++){var oAnswer=aAnswers[iAnswer],bCorrect=oAnswer.getAttribute("correct")=="true"
oAnswer.attachEvent("onclick",handleMarking)
if(Classes.has(element,"pointclick")){if(oAnswer.style.filter.indexOf("alpha")!=-1){oAnswer.style.filter="alpha(opacity=0)"}}else{oAnswer.setAttribute("overrule",element.getAttribute("answeroverrule"))}
opacityOverlay(oAnswer)
if(bCorrect){iTotalCorrect++
pCorrectPattern.push(oAnswer.innerText?oAnswer.innerText.substring(0,35):iAnswer)}
if(oAnswer.getAttribute("marked")=="true"){iTotalMarked++
oLastMark=oAnswer}
aOrderAns.push(oAnswer)}
if(bRandomize){for(var iAnswer=0;iAnswer<aOrderAns.length;iAnswer++){var oAnswer=aOrderAns[iAnswer],oTarget=aOrderAns[Math.floor(Math.random()*aAnswers.length)],oSaveTarget={position:oTarget.style.position,left:oTarget.style.left,top:oTarget.style.top,right:oTarget.style.right,bottom:oTarget.style.bottom}
oTarget.swapNode(oAnswer)
oTarget.style.position=oAnswer.style.position
oTarget.style.left=oAnswer.style.left
oTarget.style.top=oAnswer.style.top
oTarget.style.right=oAnswer.style.right
oTarget.style.bottom=oAnswer.style.bottom
oAnswer.style.position=oSaveTarget.position
oAnswer.style.left=oSaveTarget.left
oAnswer.style.top=oSaveTarget.top
oAnswer.style.right=oSaveTarget.right
oAnswer.style.bottom=oSaveTarget.bottom}
element.setAttribute("randomize","false")}
updateVariables()}
function handleMarking(event){var oSrc=event.srcElement
while(oSrc.tagName!="mcanswer")oSrc=oSrc.parentNode
toggleAnswerMark(oSrc)
if(oFeedBack&&bImmediate){var oValidate=element.getElementsByTagName("fbvalidate")[0]
oFeedBack.checkAnswer()}}
function toggleAnswerMark(oAnswer){if(iTotalCorrect==1&&bLimitAns){if(oLastMark){var oTmpMark=oLastMark
oLastMark=null
toggleAnswerMark(oTmpMark)}}
var sPressedRule=element.getAttribute("pressedrule")
if(oAnswer.getAttribute("marked")){iTotalMarked--
oLastMark=null
Classes.remove(oAnswer,sPressedRule||"pressed")
if(oAnswer.getAttribute("origbullet")){oAnswer.style.backgroundImage=oAnswer.getAttribute("origbullet")}
oAnswer.removeAttribute("marked")}else if(iTotalMarked<iTotalCorrect||!bLimitAns){var origBullet=oAnswer.currentStyle.backgroundImage
iTotalMarked++
oLastMark=oAnswer
if(sPressedRule){Classes.add(oAnswer,sPressedRule)}else{if(element.bullet){oAnswer.setAttribute("origbullet",origBullet)
oAnswer.style.removeAttribute("backgroundImage")}
Classes.add(oAnswer,"pressed")}
if(element.pressedbullet&&element.pressedbullet!=""){if(!oAnswer.getAttribute("origbullet"))oAnswer.setAttribute("origbullet",origBullet)
oAnswer.style.backgroundImage="url("+element.pressedbullet+")"}
oAnswer.setAttribute("marked","true")}}
function getCorrectPattern(){return pCorrectPattern.join("[,]").replace(/\s/g,"_")}
function getUserPattern(){return pUserPattern.join("[,]").replace(/\s/g,"_")}
function getCustomDesc(){var oQ=element.getElementsByTagName("mcquestion")[0]
return(oQ&&oQ.innerText)||element.getAttribute("desc")||""}
function checkAnswer(event){if(!oFeedBack)return false
element.tries++
var oAnswer
pUserPattern=[]
for(var iAnswer=0;iAnswer<aAnswers.length;iAnswer++){oAnswer=aAnswers[iAnswer]
if(oAnswer.getAttribute("correct")=="true"){if(oAnswer.getAttribute("marked"))iCorrect++}else{if(oAnswer.getAttribute("marked"))iIncorrect++}
if(oAnswer.getAttribute("marked")){pUserPattern.push(oAnswer.innerText?oAnswer.innerText.substring(0,35):iAnswer)}}
iComputedCorrect=iCorrect
if(iIncorrect&&(aAnswers.length-iTotalCorrect)){iComputedCorrect-=iIncorrect*iTotalCorrect/(aAnswers.length-iTotalCorrect)
iComputedCorrect=iComputedCorrect>0?iComputedCorrect:0}
eCheck.fire()
iTotalAttempts=oFeedBack.getAttribute("attempts")*1
var bDone=oFeedBack.showResults(element.tries,iTotalAttempts)
if(bDone){handleDone()}
iCorrect=0
iIncorrect=0
return bDone}
function getGlobalResult(){if(iCorrect==iTotalCorrect&&iIncorrect==0)return"RIGHT"
if(iCorrect==0)return"WRONG"
return"PARTIAL"}
function getRangeResult(){return{correct:iCorrect,total:iTotalCorrect,computed:iComputedCorrect}}
function isCustomMatch(sCondition){if(!sCondition)return false
var aValues=sCondition.split(";"),oAns={},sLogic="AND"
for(var i=0;i<aAnswers.length;i++){oAns[aAnswers[i].mcindex]=aAnswers[i].getAttribute("marked")}
for(var i=0;i<aValues.length;i++){if(aValues[i]=="AND"||aValues[i]=="OR"){sLogic=aValues[i]
aValues[i]=null
break}}
for(var i=0;i<aValues.length;i++){if(aValues[i]!=null){var aPair=aValues[i].split(":"),iIndex=aPair[0],sMatch=aPair[1]
if(sLogic=="AND"&&((sMatch=="C"&&!oAns[iIndex])||(sMatch=="N"&&oAns[iIndex]))){return false}
if(sLogic=="OR"&&((sMatch=="C"&&oAns[iIndex])||(sMatch=="N"&&!oAns[iIndex]))){return true}}}
return sLogic=="AND"?true:false}
function showFix(bRight){iDelay=bRight?1:600
iCount=0
aAnswers=element.getElementsByTagName("mcanswer")
setTimeout(fixItem,iDelay)}
function fixItem(){try{element;}catch(e){return;}
var sPressedRule=element.getAttribute("pressedrule"),sRightRule=element.getAttribute("rightrule"),sWrongRule=element.getAttribute("wrongrule")
if(iCount<aAnswers.length){var oAnswer=aAnswers[iCount++]
Classes.remove(oAnswer,sPressedRule)
if(oAnswer.getAttribute("correct")=="true"){if(sRightRule){Classes.add(oAnswer,sRightRule)}else{oAnswer.style.removeAttribute("backgroundImage")
Classes.add(oAnswer,"right")}
if(element.rightbullet&&element.rightbullet!=""){oAnswer.style.backgroundImage="url("+element.rightbullet+")"}
setTimeout(fixItem,iDelay)}else{if(oAnswer.getAttribute("marked")){if(sWrongRule){Classes.add(oAnswer,sWrongRule)}else{oAnswer.style.removeAttribute("backgroundImage")
Classes.add(oAnswer,"wrong")}
if(element.wrongbullet&&element.wrongbullet!=""){oAnswer.style.backgroundImage="url("+element.wrongbullet+")"}
setTimeout(fixItem,iDelay)}else{fixItem()}}}}
function handleDone(){element.alreadyDone="true"
for(var iAnswer=0;iAnswer<aAnswers.length;iAnswer++){var oAnswer=aAnswers[iAnswer]
oAnswer.detachEvent("onclick",handleMarking)
oAnswer.style.cursor="default"
oAnswer.removeAttribute("overrule")}}
function getIsHost(){return true}
var oVariables={"correct answers":null,"incorrect answers":null,"total answers":null,"attempts left":null,"current attempt":null,"total attempts":null}
function isVarSupported(sVar){return oVariables[sVar]!==undefined}
function getVarValue(sVar){return oVariables[sVar]}
function initVar(){element.attachEvent("oncheck",updateVariables)}
function updateVariables(){if(updateVariables.caller==updateVariables)return
oVariables["correct answers"]=iCorrect
oVariables["incorrect answers"]=iIncorrect
oVariables["total answers"]=iTotalCorrect
oVariables["attempts left"]=iTotalAttempts-element.tries
oVariables["current attempt"]=element.tries
oVariables["total attempts"]=iTotalAttempts
eVarChg.fire()}
</script> </public:component>